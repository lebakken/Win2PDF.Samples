; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Win2PDF Duplicate File Plug-In"
#define MyAppVersion "1.03"
#define MyAppPublisher "Dane Prairie Systems, LLC"
#define MyAppURL "https://www.win2pdf.com"
#define MyAppExeName "PDFDuplicateFile.exe"
#define MyWin2PDFPrinterName "Win2PDF" ;change to install plug-in for a different named Win2PDF printer

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{47EB6D2C-5C34-4CD2-A8AF-BDB4BF0336E8}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\Win2PDF\Plug-Ins
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename=Win2PDF-Duplicate-File-Plug-In
Compression=lzma
SolidCompression=yes
WizardStyle=modern
SetupLogging=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "VB.NET\bin\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
;configure Win2PDF to use the plug-in
;use HKLM to install for all users
;use "SOFTWARE\Dane Prairie Systems\PrinterName" to install for a specific printer
Root: HKCU; Subkey: "SOFTWARE\Dane Prairie Systems\{#MyWin2PDFPrinterName}"; ValueType:string; ValueName: "default post action"; ValueData: "{app}\{#MyAppExeName} ""%s"""; Flags: uninsdeletevalue
;Allow user to turn "Duplicate File" on or off in the Win2PDF File Save window. Remove this to always apply.
;Root: HKCU; Subkey: "SOFTWARE\Dane Prairie Systems\{#MyWin2PDFPrinterName}"; ValueType:string; ValueName: "post action checkbox label"; ValueData: "Duplicate File"; Flags: uninsdeletevalue

[Run]
Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"; Description: "Configure Win2PDF Duplicate File Location"; 

[Icons]
Name: "{group}\Configure Win2PDF Duplicate File Location"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"

[Code]

function GetWin2PDFFile: String;
begin

  if isWin64() Then
  begin
     Result := ExpandConstant('{sys}\spool\drivers\x64\3');
  end
  else
  begin
     Result := ExpandConstant('{sys}\spool\drivers\w32x86\3');
  end;
  Result := Result + '\win2pdf.exe';
end;

function InitializeSetup(): Boolean;
var
  pluginstalled: String;
  ErrCode: Integer;
  Win2PDFInstalled: Boolean;
begin
  Win2PDFInstalled := FileExists(GetWin2PDFFile());

  if Win2PDFInstalled then
    Log('Win2PDF file found')
  else
    Log('Win2PDF file not found');

  // check if Win2PDF is installed
  if (Not Win2PDFInstalled) then
    begin
        MsgBox('If Win2PDF is not installed, download and run the Win2PDF setup program before installing the plug-in.', mbCriticalError, MB_OK);
        ShellExec('open', 'https://www.win2pdf.com/download/download.htm', '', '', SW_SHOW, ewNoWait, ErrCode);
        result := false;
        Log('Win2PDF not found.');
    end;
  //check if another plug-in is already installed
  if RegQueryStringValue(HKEY_CURRENT_USER, 'Software\Dane Prairie Systems\Win2PDF', 
    'default post action', pluginstalled) then
    if Pos(ExpandConstant('{#MyAppExeName}'), pluginstalled) = 0 then
      begin
        MsgBox('Another Win2PDF plug-in is already installed.  Please uninstall from Add or Remove Programs.', mbCriticalError, MB_OK);
        result := false;
      end
    else //the current Win2PDF plug is installed, allow an upgrade
      begin
        result := true;
      end
  else
    result := true;
end;

